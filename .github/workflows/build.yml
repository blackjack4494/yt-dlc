name: Build

on:
  push:
    branches:
      - release

jobs:
  build_unix:
    runs-on: ubuntu-latest

    outputs:
      ytdlp_version: ${{ steps.bump_version.outputs.ytdlp_version }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      sha256_unix: ${{ steps.sha256_file.outputs.sha256_unix }}
      sha512_unix: ${{ steps.sha512_file.outputs.sha512_unix }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
          python-version: '3.8'
    - name: Install packages
      run: sudo apt-get -y install zip pandoc man
    - name: Bump version
      id: bump_version
      run: python devscripts/update-version.py
    - name: Print version
      run: echo "${{ steps.bump_version.outputs.ytdlp_version }}"
    - name: Run Make
      run: make all tar
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.bump_version.outputs.ytdlp_version }}
        release_name: yt-dlp ${{ steps.bump_version.outputs.ytdlp_version }}
        body: |
          Changelog:
          PLACEHOLDER
        draft: false
        prerelease: false
    - name: Upload yt-dlp Unix binary
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./yt-dlp
        asset_name: yt-dlp
        asset_content_type: application/octet-stream
    - name: Upload Source tar
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./yt-dlp.tar.gz
        asset_name: yt-dlp.tar.gz
        asset_content_type: application/gzip
    - name: Get SHA2-256SUMS for yt-dlp
      id: sha256_file
      run: echo "::set-output name=sha256_unix::$(sha256sum yt-dlp | awk '{print $1}')"
    - name: Get SHA2-512SUMS for yt-dlp
      id: sha512_file
      run: echo "::set-output name=sha512_unix::$(sha512sum yt-dlp | awk '{print $1}')"
    - name: Install dependencies for pypi
      env:
        PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
      if: "env.PYPI_TOKEN != ''"
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish on pypi
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      if: "env.TWINE_PASSWORD != ''"
      run: |
        rm -rf dist/*
        python setup.py sdist bdist_wheel
        twine upload dist/*

  build_windows:
    runs-on: windows-latest
    needs: build_unix

    outputs:
      sha256_windows: ${{ steps.sha256_file_win.outputs.sha256_windows }}
      sha512_windows: ${{ steps.sha512_file_win.outputs.sha512_windows }}

    steps:
    - uses: actions/checkout@v2
    # 3.8 is used for Win7 support
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
          python-version: '3.8'
    - name: Upgrade pip and enable wheel support
      run: python -m pip install --upgrade pip setuptools wheel
    - name: Install Requirements
      run: pip install pyinstaller mutagen pycryptodome websockets
    - name: Bump version
      id: bump_version
      run: python devscripts/update-version.py
    - name: Print version
      run: echo "${{ steps.bump_version.outputs.ytdlp_version }}"
    - name: Run PyInstaller Script
      run: python pyinst.py 64
    - name: Upload yt-dlp.exe Windows binary
      id: upload-release-windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.build_unix.outputs.upload_url }}
        asset_path: ./dist/yt-dlp.exe
        asset_name: yt-dlp.exe
        asset_content_type: application/vnd.microsoft.portable-executable
    - name: Get SHA2-256SUMS for yt-dlp.exe
      id: sha256_file_win
      run: echo "::set-output name=sha256_windows::$((Get-FileHash dist\yt-dlp.exe -Algorithm SHA256).Hash.ToLower())"
    - name: Get SHA2-512SUMS for yt-dlp.exe
      id: sha512_file_win
      run: echo "::set-output name=sha512_windows::$((Get-FileHash dist\yt-dlp.exe -Algorithm SHA512).Hash.ToLower())"

  build_windows32:
    runs-on: windows-latest
    needs: [build_unix, build_windows]

    outputs:
      sha256_windows32: ${{ steps.sha256_file_win32.outputs.sha256_windows32 }}
      sha512_windows32: ${{ steps.sha512_file_win32.outputs.sha512_windows32 }}

    steps:
    - uses: actions/checkout@v2
    # 3.7 is used for Vista support. See https://github.com/yt-dlp/yt-dlp/issues/390
    - name: Set up Python 3.7 32-Bit
      uses: actions/setup-python@v2
      with:
          python-version: '3.7'
          architecture: 'x86'
    - name: Upgrade pip and enable wheel support
      run: python -m pip install --upgrade pip setuptools wheel
    - name: Install Requirements
      run: pip install pyinstaller mutagen pycryptodome websockets
    - name: Bump version
      id: bump_version
      run: python devscripts/update-version.py
    - name: Print version
      run: echo "${{ steps.bump_version.outputs.ytdlp_version }}"
    - name: Run PyInstaller Script for 32 Bit
      run: python pyinst.py 32
    - name: Upload Executable yt-dlp_x86.exe
      id: upload-release-windows32
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.build_unix.outputs.upload_url }}
        asset_path: ./dist/yt-dlp_x86.exe
        asset_name: yt-dlp_x86.exe
        asset_content_type: application/vnd.microsoft.portable-executable
    - name: Get SHA2-256SUMS for yt-dlp_x86.exe
      id: sha256_file_win32
      run: echo "::set-output name=sha256_windows32::$((Get-FileHash dist\yt-dlp_x86.exe -Algorithm SHA256).Hash.ToLower())"
    - name: Get SHA2-512SUMS for yt-dlp_x86.exe
      id: sha512_file_win32
      run: echo "::set-output name=sha512_windows32::$((Get-FileHash dist\yt-dlp_x86.exe -Algorithm SHA512).Hash.ToLower())"

  finish:
    runs-on: ubuntu-latest
    needs: [build_unix, build_windows, build_windows32]

    steps:
    - name: Make SHA2-256SUMS file
      env:
        SHA256_WINDOWS: ${{ needs.build_windows.outputs.sha256_windows }}
        SHA256_WINDOWS32: ${{ needs.build_windows32.outputs.sha256_windows32 }}
        SHA256_UNIX: ${{ needs.build_unix.outputs.sha256_unix }}
        YTDLP_VERSION: ${{ needs.build_unix.outputs.ytdlp_version }}
      run: |
        echo "version:${{ env.YTDLP_VERSION }}" >> SHA2-256SUMS
        echo "yt-dlp.exe:${{ env.SHA256_WINDOWS }}" >> SHA2-256SUMS
        echo "yt-dlp_x86.exe:${{ env.SHA256_WINDOWS32 }}" >> SHA2-256SUMS
        echo "yt-dlp:${{ env.SHA256_UNIX }}" >> SHA2-256SUMS
    - name: Upload 256SUMS file
      id: upload-sums
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.build_unix.outputs.upload_url }}
        asset_path: ./SHA2-256SUMS
        asset_name: SHA2-256SUMS
        asset_content_type: text/plain
    - name: Make SHA2-512SUMS file
      env:
        SHA512_WINDOWS: ${{ needs.build_windows.outputs.sha512_windows }}
        SHA512_WINDOWS32: ${{ needs.build_windows32.outputs.sha512_windows32 }}
        SHA512_UNIX: ${{ needs.build_unix.outputs.sha512_unix }}
      run: |
        echo "${{ env.SHA512_WINDOWS }}  yt-dlp.exe" >> SHA2-512SUMS
        echo "${{ env.SHA512_WINDOWS32 }}  yt-dlp_x86.exe" >> SHA2-512SUMS
        echo "${{ env.SHA512_UNIX }}  yt-dlp" >> SHA2-512SUMS
    - name: Upload 512SUMS file
      id: upload-512sums
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.build_unix.outputs.upload_url }}
        asset_path: ./SHA2-512SUMS
        asset_name: SHA2-512SUMS
        asset_content_type: text/plain
