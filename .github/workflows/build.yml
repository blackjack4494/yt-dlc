name: Build

on:
  push:
    branches:
      - release

jobs:
  build_unix:

    runs-on: ubuntu-latest

    outputs:
      ytdlc_version: ${{ steps.bump_version.outputs.ytdlc_version }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      sha2_unix: ${{ steps.sha2_file.outputs.sha2_unix }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
          python-version: '3.8'
    - name: Install packages
      run: sudo apt-get -y install zip pandoc man
    - name: Bump version
      id: bump_version
      run: python scripts/update-version-workflow.py
    - name: Check the output from My action
      run: echo "${{ steps.bump_version.outputs.ytdlc_version }}"
    - name: Run Make
      run: make
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.bump_version.outputs.ytdlc_version }}
        release_name: youtube-dlc ${{ steps.bump_version.outputs.ytdlc_version }}
        body: |
          Changelog:
          PLACEHOLDER
        draft: false
        prerelease: false
    - name: Upload youtube-dlc Unix binary
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./youtube-dlc
        asset_name: youtube-dlc
        asset_content_type: application/octet-stream
    - name: Get SHA2-256SUMS for youtube-dlc
      id: sha2_file
      env:
        SHA2: ${{ hashFiles('youtube-dlc') }}
      run: echo "::set-output name=sha2_unix::$SHA2"
    - name: Install dependencies for pypi
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        rm -rf dist/*
        python setup.py sdist bdist_wheel
        twine upload dist/*

  build_windows:

    runs-on: windows-latest

    needs: build_unix

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
          python-version: '3.8'
    - name: Install Requirements
      run: pip install pyinstaller
    - name: Bump version
      run: python scripts/update-version-workflow.py
    - name: Run PyInstaller Script
      run: python pyinst.py
    - name: Upload youtube-dlc.exe Windows binary
      id: upload-release-windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.build_unix.outputs.upload_url }}
        asset_path: ./dist/youtube-dlc.exe
        asset_name: youtube-dlc.exe
        asset_content_type: application/vnd.microsoft.portable-executable
    - name: Get SHA2-256SUMS for youtube-dlc.exe
      id: sha2_file_win
      env:
        SHA2_win: ${{ hashFiles('dist/youtube-dlc.exe') }}
      run: echo "::set-output name=sha2_windows::$SHA2_win"

  build_windows32:

    runs-on: windows-latest

    needs: [build_unix, build_windows]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.4.4 32-Bit
      uses: actions/setup-python@v2
      with:
          python-version: '3.4.4'
          architecture: 'x86'
    - name: Install Requirements for 32 Bit
      run: pip install pyinstaller==3.5
    - name: Bump version
      run: python scripts/update-version-workflow.py
    - name: Run PyInstaller Script for 32 Bit
      run: python pyinst32.py
    - name: Upload Executable youtube-dlc_x86.exe
      id: upload-release-windows32
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.build_unix.outputs.upload_url }}
        asset_path: ./dist/youtube-dlc_x86.exe
        asset_name: youtube-dlc_x86.exe
        asset_content_type: application/vnd.microsoft.portable-executable
    - name: Get SHA2-256SUMS for youtube-dlc_x86.exe
      id: sha2_file_win32
      env:
        SHA2_win32: ${{ hashFiles('dist/youtube-dlc_x86.exe') }}
      run: echo "::set-output name=sha2_windows32::$SHA2_win32"
    - name: Make SHA2-256SUMS file
      env:
        SHA2_WINDOWS: ${{ needs.build_windows.outputs.sha2_windows }}
        SHA2_WINDOWS32: ${{ steps.sha2_file_win32.outputs.sha2_windows32 }}
        SHA2_UNIX: ${{ needs.build_unix.outputs.sha2_unix }}
        YTDLC_VERSION: ${{ needs.build_unix.outputs.ytdlc_version }}
      run: |
        echo "version:${env:YTDLC_VERSION}" >> SHA2-256SUMS
        echo "youtube-dlc.exe:${env:SHA2_WINDOWS}" >> SHA2-256SUMS
        echo "youtube-dlc_x86.exe:${env:SHA2_WINDOWS32}" >> SHA2-256SUMS
        echo "youtube-dlc:${env:SHA2_UNIX}" >> SHA2-256SUMS

    - name: Upload 256SUMS file
      id: upload-sums
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.build_unix.outputs.upload_url }}
        asset_path: ./SHA2-256SUMS
        asset_name: SHA2-256SUMS
        asset_content_type: text/plain
